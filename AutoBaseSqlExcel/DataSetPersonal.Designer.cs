//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AutoBaseSql {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetPersonal")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetPersonal : global::System.Data.DataSet {
        
        private ПЕРСОНАЛDataTable tableПЕРСОНАЛ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSetPersonal() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSetPersonal(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ПЕРСОНАЛ"] != null)) {
                    base.Tables.Add(new ПЕРСОНАЛDataTable(ds.Tables["ПЕРСОНАЛ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПЕРСОНАЛDataTable ПЕРСОНАЛ {
            get {
                return this.tableПЕРСОНАЛ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetPersonal cln = ((DataSetPersonal)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ПЕРСОНАЛ"] != null)) {
                    base.Tables.Add(new ПЕРСОНАЛDataTable(ds.Tables["ПЕРСОНАЛ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableПЕРСОНАЛ = ((ПЕРСОНАЛDataTable)(base.Tables["ПЕРСОНАЛ"]));
            if ((initTable == true)) {
                if ((this.tableПЕРСОНАЛ != null)) {
                    this.tableПЕРСОНАЛ.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetPersonal";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetPersonal.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableПЕРСОНАЛ = new ПЕРСОНАЛDataTable();
            base.Tables.Add(this.tableПЕРСОНАЛ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeПЕРСОНАЛ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetPersonal ds = new DataSetPersonal();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ПЕРСОНАЛRowChangeEventHandler(object sender, ПЕРСОНАЛRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПЕРСОНАЛDataTable : global::System.Data.TypedTableBase<ПЕРСОНАЛRow> {
            
            private global::System.Data.DataColumn columnКОД_ПЕРСОНАЛ;
            
            private global::System.Data.DataColumn columnФАМИЛИЯ_ПЕРСОНАЛ;
            
            private global::System.Data.DataColumn columnИМЯ_ПЕРСОНАЛ;
            
            private global::System.Data.DataColumn columnОТЧЕСТВО_ПЕРСОНАЛ;
            
            private global::System.Data.DataColumn columnЛОГИН;
            
            private global::System.Data.DataColumn columnРАБОТАЕТ;
            
            private global::System.Data.DataColumn columnЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ;
            
            private global::System.Data.DataColumn columnССЫЛКА_КОД_ДОЛЖНОСТЬ;
            
            private global::System.Data.DataColumn columnССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ;
            
            private global::System.Data.DataColumn columnРАЗРЯД_КОЭФФИЦИЕНТ;
            
            private global::System.Data.DataColumn columnОКЛАД;
            
            private global::System.Data.DataColumn columnБОНУС_ДЕТАЛИ;
            
            private global::System.Data.DataColumn columnБОНУС_МАСЛА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПЕРСОНАЛDataTable() {
                this.TableName = "ПЕРСОНАЛ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПЕРСОНАЛDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ПЕРСОНАЛDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn КОД_ПЕРСОНАЛColumn {
                get {
                    return this.columnКОД_ПЕРСОНАЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ФАМИЛИЯ_ПЕРСОНАЛColumn {
                get {
                    return this.columnФАМИЛИЯ_ПЕРСОНАЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ИМЯ_ПЕРСОНАЛColumn {
                get {
                    return this.columnИМЯ_ПЕРСОНАЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОТЧЕСТВО_ПЕРСОНАЛColumn {
                get {
                    return this.columnОТЧЕСТВО_ПЕРСОНАЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЛОГИНColumn {
                get {
                    return this.columnЛОГИН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn РАБОТАЕТColumn {
                get {
                    return this.columnРАБОТАЕТ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛColumn {
                get {
                    return this.columnЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ССЫЛКА_КОД_ДОЛЖНОСТЬColumn {
                get {
                    return this.columnССЫЛКА_КОД_ДОЛЖНОСТЬ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕColumn {
                get {
                    return this.columnССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn РАЗРЯД_КОЭФФИЦИЕНТColumn {
                get {
                    return this.columnРАЗРЯД_КОЭФФИЦИЕНТ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ОКЛАДColumn {
                get {
                    return this.columnОКЛАД;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn БОНУС_ДЕТАЛИColumn {
                get {
                    return this.columnБОНУС_ДЕТАЛИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn БОНУС_МАСЛАColumn {
                get {
                    return this.columnБОНУС_МАСЛА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПЕРСОНАЛRow this[int index] {
                get {
                    return ((ПЕРСОНАЛRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПЕРСОНАЛRowChangeEventHandler ПЕРСОНАЛRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПЕРСОНАЛRowChangeEventHandler ПЕРСОНАЛRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПЕРСОНАЛRowChangeEventHandler ПЕРСОНАЛRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ПЕРСОНАЛRowChangeEventHandler ПЕРСОНАЛRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddПЕРСОНАЛRow(ПЕРСОНАЛRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПЕРСОНАЛRow AddПЕРСОНАЛRow(long КОД_ПЕРСОНАЛ, string ФАМИЛИЯ_ПЕРСОНАЛ, string ИМЯ_ПЕРСОНАЛ, string ОТЧЕСТВО_ПЕРСОНАЛ, string ЛОГИН, bool РАБОТАЕТ, long ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, long ССЫЛКА_КОД_ДОЛЖНОСТЬ, long ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, float РАЗРЯД_КОЭФФИЦИЕНТ, float ОКЛАД, float БОНУС_ДЕТАЛИ, float БОНУС_МАСЛА) {
                ПЕРСОНАЛRow rowПЕРСОНАЛRow = ((ПЕРСОНАЛRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КОД_ПЕРСОНАЛ,
                        ФАМИЛИЯ_ПЕРСОНАЛ,
                        ИМЯ_ПЕРСОНАЛ,
                        ОТЧЕСТВО_ПЕРСОНАЛ,
                        ЛОГИН,
                        РАБОТАЕТ,
                        ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ,
                        ССЫЛКА_КОД_ДОЛЖНОСТЬ,
                        ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ,
                        РАЗРЯД_КОЭФФИЦИЕНТ,
                        ОКЛАД,
                        БОНУС_ДЕТАЛИ,
                        БОНУС_МАСЛА};
                rowПЕРСОНАЛRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПЕРСОНАЛRow);
                return rowПЕРСОНАЛRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПЕРСОНАЛRow FindByКОД_ПЕРСОНАЛ(long КОД_ПЕРСОНАЛ) {
                return ((ПЕРСОНАЛRow)(this.Rows.Find(new object[] {
                            КОД_ПЕРСОНАЛ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПЕРСОНАЛDataTable cln = ((ПЕРСОНАЛDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПЕРСОНАЛDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnКОД_ПЕРСОНАЛ = base.Columns["КОД_ПЕРСОНАЛ"];
                this.columnФАМИЛИЯ_ПЕРСОНАЛ = base.Columns["ФАМИЛИЯ_ПЕРСОНАЛ"];
                this.columnИМЯ_ПЕРСОНАЛ = base.Columns["ИМЯ_ПЕРСОНАЛ"];
                this.columnОТЧЕСТВО_ПЕРСОНАЛ = base.Columns["ОТЧЕСТВО_ПЕРСОНАЛ"];
                this.columnЛОГИН = base.Columns["ЛОГИН"];
                this.columnРАБОТАЕТ = base.Columns["РАБОТАЕТ"];
                this.columnЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ = base.Columns["ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ"];
                this.columnССЫЛКА_КОД_ДОЛЖНОСТЬ = base.Columns["ССЫЛКА_КОД_ДОЛЖНОСТЬ"];
                this.columnССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ = base.Columns["ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ"];
                this.columnРАЗРЯД_КОЭФФИЦИЕНТ = base.Columns["РАЗРЯД_КОЭФФИЦИЕНТ"];
                this.columnОКЛАД = base.Columns["ОКЛАД"];
                this.columnБОНУС_ДЕТАЛИ = base.Columns["БОНУС_ДЕТАЛИ"];
                this.columnБОНУС_МАСЛА = base.Columns["БОНУС_МАСЛА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnКОД_ПЕРСОНАЛ = new global::System.Data.DataColumn("КОД_ПЕРСОНАЛ", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ПЕРСОНАЛ);
                this.columnФАМИЛИЯ_ПЕРСОНАЛ = new global::System.Data.DataColumn("ФАМИЛИЯ_ПЕРСОНАЛ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФАМИЛИЯ_ПЕРСОНАЛ);
                this.columnИМЯ_ПЕРСОНАЛ = new global::System.Data.DataColumn("ИМЯ_ПЕРСОНАЛ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИМЯ_ПЕРСОНАЛ);
                this.columnОТЧЕСТВО_ПЕРСОНАЛ = new global::System.Data.DataColumn("ОТЧЕСТВО_ПЕРСОНАЛ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОТЧЕСТВО_ПЕРСОНАЛ);
                this.columnЛОГИН = new global::System.Data.DataColumn("ЛОГИН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЛОГИН);
                this.columnРАБОТАЕТ = new global::System.Data.DataColumn("РАБОТАЕТ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРАБОТАЕТ);
                this.columnЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ = new global::System.Data.DataColumn("ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ);
                this.columnССЫЛКА_КОД_ДОЛЖНОСТЬ = new global::System.Data.DataColumn("ССЫЛКА_КОД_ДОЛЖНОСТЬ", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnССЫЛКА_КОД_ДОЛЖНОСТЬ);
                this.columnССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ = new global::System.Data.DataColumn("ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ);
                this.columnРАЗРЯД_КОЭФФИЦИЕНТ = new global::System.Data.DataColumn("РАЗРЯД_КОЭФФИЦИЕНТ", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРАЗРЯД_КОЭФФИЦИЕНТ);
                this.columnОКЛАД = new global::System.Data.DataColumn("ОКЛАД", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОКЛАД);
                this.columnБОНУС_ДЕТАЛИ = new global::System.Data.DataColumn("БОНУС_ДЕТАЛИ", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnБОНУС_ДЕТАЛИ);
                this.columnБОНУС_МАСЛА = new global::System.Data.DataColumn("БОНУС_МАСЛА", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnБОНУС_МАСЛА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnКОД_ПЕРСОНАЛ}, true));
                this.columnКОД_ПЕРСОНАЛ.AllowDBNull = false;
                this.columnКОД_ПЕРСОНАЛ.Unique = true;
                this.columnФАМИЛИЯ_ПЕРСОНАЛ.AllowDBNull = false;
                this.columnФАМИЛИЯ_ПЕРСОНАЛ.MaxLength = 24;
                this.columnИМЯ_ПЕРСОНАЛ.MaxLength = 24;
                this.columnОТЧЕСТВО_ПЕРСОНАЛ.MaxLength = 24;
                this.columnЛОГИН.MaxLength = 24;
                this.columnРАБОТАЕТ.AllowDBNull = false;
                this.columnЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ.AllowDBNull = false;
                this.columnССЫЛКА_КОД_ДОЛЖНОСТЬ.AllowDBNull = false;
                this.columnССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ.AllowDBNull = false;
                this.columnРАЗРЯД_КОЭФФИЦИЕНТ.AllowDBNull = false;
                this.columnОКЛАД.AllowDBNull = false;
                this.columnБОНУС_ДЕТАЛИ.AllowDBNull = false;
                this.columnБОНУС_МАСЛА.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПЕРСОНАЛRow NewПЕРСОНАЛRow() {
                return ((ПЕРСОНАЛRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПЕРСОНАЛRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПЕРСОНАЛRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПЕРСОНАЛRowChanged != null)) {
                    this.ПЕРСОНАЛRowChanged(this, new ПЕРСОНАЛRowChangeEvent(((ПЕРСОНАЛRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПЕРСОНАЛRowChanging != null)) {
                    this.ПЕРСОНАЛRowChanging(this, new ПЕРСОНАЛRowChangeEvent(((ПЕРСОНАЛRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПЕРСОНАЛRowDeleted != null)) {
                    this.ПЕРСОНАЛRowDeleted(this, new ПЕРСОНАЛRowChangeEvent(((ПЕРСОНАЛRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПЕРСОНАЛRowDeleting != null)) {
                    this.ПЕРСОНАЛRowDeleting(this, new ПЕРСОНАЛRowChangeEvent(((ПЕРСОНАЛRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveПЕРСОНАЛRow(ПЕРСОНАЛRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetPersonal ds = new DataSetPersonal();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПЕРСОНАЛDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПЕРСОНАЛRow : global::System.Data.DataRow {
            
            private ПЕРСОНАЛDataTable tableПЕРСОНАЛ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ПЕРСОНАЛRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПЕРСОНАЛ = ((ПЕРСОНАЛDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long КОД_ПЕРСОНАЛ {
                get {
                    return ((long)(this[this.tableПЕРСОНАЛ.КОД_ПЕРСОНАЛColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.КОД_ПЕРСОНАЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ФАМИЛИЯ_ПЕРСОНАЛ {
                get {
                    return ((string)(this[this.tableПЕРСОНАЛ.ФАМИЛИЯ_ПЕРСОНАЛColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.ФАМИЛИЯ_ПЕРСОНАЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ИМЯ_ПЕРСОНАЛ {
                get {
                    try {
                        return ((string)(this[this.tableПЕРСОНАЛ.ИМЯ_ПЕРСОНАЛColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ИМЯ_ПЕРСОНАЛ\' в таблице \'ПЕРСОНАЛ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПЕРСОНАЛ.ИМЯ_ПЕРСОНАЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ОТЧЕСТВО_ПЕРСОНАЛ {
                get {
                    try {
                        return ((string)(this[this.tableПЕРСОНАЛ.ОТЧЕСТВО_ПЕРСОНАЛColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ОТЧЕСТВО_ПЕРСОНАЛ\' в таблице \'ПЕРСОНАЛ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПЕРСОНАЛ.ОТЧЕСТВО_ПЕРСОНАЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ЛОГИН {
                get {
                    try {
                        return ((string)(this[this.tableПЕРСОНАЛ.ЛОГИНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЛОГИН\' в таблице \'ПЕРСОНАЛ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПЕРСОНАЛ.ЛОГИНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool РАБОТАЕТ {
                get {
                    return ((bool)(this[this.tableПЕРСОНАЛ.РАБОТАЕТColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.РАБОТАЕТColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ {
                get {
                    return ((long)(this[this.tableПЕРСОНАЛ.ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long ССЫЛКА_КОД_ДОЛЖНОСТЬ {
                get {
                    return ((long)(this[this.tableПЕРСОНАЛ.ССЫЛКА_КОД_ДОЛЖНОСТЬColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.ССЫЛКА_КОД_ДОЛЖНОСТЬColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ {
                get {
                    return ((long)(this[this.tableПЕРСОНАЛ.ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float РАЗРЯД_КОЭФФИЦИЕНТ {
                get {
                    return ((float)(this[this.tableПЕРСОНАЛ.РАЗРЯД_КОЭФФИЦИЕНТColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.РАЗРЯД_КОЭФФИЦИЕНТColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float ОКЛАД {
                get {
                    return ((float)(this[this.tableПЕРСОНАЛ.ОКЛАДColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.ОКЛАДColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float БОНУС_ДЕТАЛИ {
                get {
                    return ((float)(this[this.tableПЕРСОНАЛ.БОНУС_ДЕТАЛИColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.БОНУС_ДЕТАЛИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float БОНУС_МАСЛА {
                get {
                    return ((float)(this[this.tableПЕРСОНАЛ.БОНУС_МАСЛАColumn]));
                }
                set {
                    this[this.tableПЕРСОНАЛ.БОНУС_МАСЛАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsИМЯ_ПЕРСОНАЛNull() {
                return this.IsNull(this.tableПЕРСОНАЛ.ИМЯ_ПЕРСОНАЛColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetИМЯ_ПЕРСОНАЛNull() {
                this[this.tableПЕРСОНАЛ.ИМЯ_ПЕРСОНАЛColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsОТЧЕСТВО_ПЕРСОНАЛNull() {
                return this.IsNull(this.tableПЕРСОНАЛ.ОТЧЕСТВО_ПЕРСОНАЛColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetОТЧЕСТВО_ПЕРСОНАЛNull() {
                this[this.tableПЕРСОНАЛ.ОТЧЕСТВО_ПЕРСОНАЛColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsЛОГИНNull() {
                return this.IsNull(this.tableПЕРСОНАЛ.ЛОГИНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetЛОГИНNull() {
                this[this.tableПЕРСОНАЛ.ЛОГИНColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ПЕРСОНАЛRowChangeEvent : global::System.EventArgs {
            
            private ПЕРСОНАЛRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПЕРСОНАЛRowChangeEvent(ПЕРСОНАЛRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ПЕРСОНАЛRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AutoBaseSql.DataSetPersonalTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПЕРСОНАЛTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ПЕРСОНАЛTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПЕРСОНАЛ";
            tableMapping.ColumnMappings.Add("КОД_ПЕРСОНАЛ", "КОД_ПЕРСОНАЛ");
            tableMapping.ColumnMappings.Add("ФАМИЛИЯ_ПЕРСОНАЛ", "ФАМИЛИЯ_ПЕРСОНАЛ");
            tableMapping.ColumnMappings.Add("ИМЯ_ПЕРСОНАЛ", "ИМЯ_ПЕРСОНАЛ");
            tableMapping.ColumnMappings.Add("ОТЧЕСТВО_ПЕРСОНАЛ", "ОТЧЕСТВО_ПЕРСОНАЛ");
            tableMapping.ColumnMappings.Add("ЛОГИН", "ЛОГИН");
            tableMapping.ColumnMappings.Add("РАБОТАЕТ", "РАБОТАЕТ");
            tableMapping.ColumnMappings.Add("ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", "ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ");
            tableMapping.ColumnMappings.Add("ССЫЛКА_КОД_ДОЛЖНОСТЬ", "ССЫЛКА_КОД_ДОЛЖНОСТЬ");
            tableMapping.ColumnMappings.Add("ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", "ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ");
            tableMapping.ColumnMappings.Add("РАЗРЯД_КОЭФФИЦИЕНТ", "РАЗРЯД_КОЭФФИЦИЕНТ");
            tableMapping.ColumnMappings.Add("ОКЛАД", "ОКЛАД");
            tableMapping.ColumnMappings.Add("БОНУС_ДЕТАЛИ", "БОНУС_ДЕТАЛИ");
            tableMapping.ColumnMappings.Add("БОНУС_МАСЛА", "БОНУС_МАСЛА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [autoNew].[dbo].[ПЕРСОНАЛ] WHERE (([КОД_ПЕРСОНАЛ] = ?) AND ([ФАМИЛИЯ_ПЕРСОНАЛ] = ?) AND ((? = 1 AND [ИМЯ_ПЕРСОНАЛ] IS NULL) OR ([ИМЯ_ПЕРСОНАЛ] = ?)) AND ((? = 1 AND [ОТЧЕСТВО_ПЕРСОНАЛ] IS NULL) OR ([ОТЧЕСТВО_ПЕРСОНАЛ] = ?)) AND ((? = 1 AND [ЛОГИН] IS NULL) OR ([ЛОГИН] = ?)) AND ([РАБОТАЕТ] = ?) AND ([ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ] = ?) AND ([ССЫЛКА_КОД_ДОЛЖНОСТЬ] = ?) AND ([ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ] = ?) AND ([РАЗРЯД_КОЭФФИЦИЕНТ] = ?) AND ([ОКЛАД] = ?) AND ([БОНУС_ДЕТАЛИ] = ?) AND ([БОНУС_МАСЛА] = ?))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_КОД_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "КОД_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ИМЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ИМЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ИМЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ИМЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ЛОГИН", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЛОГИН", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ЛОГИН", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЛОГИН", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_РАБОТАЕТ", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАБОТАЕТ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ОКЛАД", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОКЛАД", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_БОНУС_ДЕТАЛИ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_ДЕТАЛИ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_БОНУС_МАСЛА", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_МАСЛА", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [autoNew].[dbo].[ПЕРСОНАЛ] ([КОД_ПЕРСОНАЛ], [ФАМИЛИЯ_ПЕРСОНАЛ], [ИМЯ_ПЕРСОНАЛ], [ОТЧЕСТВО_ПЕРСОНАЛ], [ЛОГИН], [РАБОТАЕТ], [ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ], [ССЫЛКА_КОД_ДОЛЖНОСТЬ], [ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ], [РАЗРЯД_КОЭФФИЦИЕНТ], [ОКЛАД], [БОНУС_ДЕТАЛИ], [БОНУС_МАСЛА]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("КОД_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "КОД_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ИМЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ИМЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ЛОГИН", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЛОГИН", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("РАБОТАЕТ", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАБОТАЕТ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ОКЛАД", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОКЛАД", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("БОНУС_ДЕТАЛИ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_ДЕТАЛИ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("БОНУС_МАСЛА", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_МАСЛА", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [autoNew].[dbo].[ПЕРСОНАЛ] SET [КОД_ПЕРСОНАЛ] = ?, [ФАМИЛИЯ_ПЕРСОНАЛ] = ?, [ИМЯ_ПЕРСОНАЛ] = ?, [ОТЧЕСТВО_ПЕРСОНАЛ] = ?, [ЛОГИН] = ?, [РАБОТАЕТ] = ?, [ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ] = ?, [ССЫЛКА_КОД_ДОЛЖНОСТЬ] = ?, [ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ] = ?, [РАЗРЯД_КОЭФФИЦИЕНТ] = ?, [ОКЛАД] = ?, [БОНУС_ДЕТАЛИ] = ?, [БОНУС_МАСЛА] = ? WHERE (([КОД_ПЕРСОНАЛ] = ?) AND ([ФАМИЛИЯ_ПЕРСОНАЛ] = ?) AND ((? = 1 AND [ИМЯ_ПЕРСОНАЛ] IS NULL) OR ([ИМЯ_ПЕРСОНАЛ] = ?)) AND ((? = 1 AND [ОТЧЕСТВО_ПЕРСОНАЛ] IS NULL) OR ([ОТЧЕСТВО_ПЕРСОНАЛ] = ?)) AND ((? = 1 AND [ЛОГИН] IS NULL) OR ([ЛОГИН] = ?)) AND ([РАБОТАЕТ] = ?) AND ([ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ] = ?) AND ([ССЫЛКА_КОД_ДОЛЖНОСТЬ] = ?) AND ([ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ] = ?) AND ([РАЗРЯД_КОЭФФИЦИЕНТ] = ?) AND ([ОКЛАД] = ?) AND ([БОНУС_ДЕТАЛИ] = ?) AND ([БОНУС_МАСЛА] = ?))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("КОД_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "КОД_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ИМЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ИМЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ЛОГИН", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЛОГИН", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("РАБОТАЕТ", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАБОТАЕТ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ОКЛАД", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОКЛАД", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("БОНУС_ДЕТАЛИ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_ДЕТАЛИ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("БОНУС_МАСЛА", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_МАСЛА", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_КОД_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "КОД_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ФАМИЛИЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ИМЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ИМЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ИМЯ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ИМЯ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОТЧЕСТВО_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ЛОГИН", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЛОГИН", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ЛОГИН", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЛОГИН", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_РАБОТАЕТ", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАБОТАЕТ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ДОЛЖНОСТЬ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.Odbc.OdbcType.BigInt, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "РАЗРЯД_КОЭФФИЦИЕНТ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ОКЛАД", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ОКЛАД", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_БОНУС_ДЕТАЛИ", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_ДЕТАЛИ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_БОНУС_МАСЛА", global::System.Data.Odbc.OdbcType.Real, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "БОНУС_МАСЛА", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::AutoBaseSql.Properties.Settings.Default.autoNewConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT КОД_ПЕРСОНАЛ, ФАМИЛИЯ_ПЕРСОНАЛ, ИМЯ_ПЕРСОНАЛ, ОТЧЕСТВО_ПЕРСОНАЛ, ЛОГИН, РА" +
                "БОТАЕТ, ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, ССЫЛКА_КОД_ДОЛЖНОСТЬ, ССЫЛКА_КОД_ПОДРАЗДЕЛ" +
                "ЕНИЕ, РАЗРЯД_КОЭФФИЦИЕНТ, ОКЛАД, БОНУС_ДЕТАЛИ, БОНУС_МАСЛА FROM dbo.ПЕРСОНАЛ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetPersonal.ПЕРСОНАЛDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetPersonal.ПЕРСОНАЛDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetPersonal.ПЕРСОНАЛDataTable dataTable = new DataSetPersonal.ПЕРСОНАЛDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetPersonal.ПЕРСОНАЛDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetPersonal dataSet) {
            return this.Adapter.Update(dataSet, "ПЕРСОНАЛ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_КОД_ПЕРСОНАЛ, string Original_ФАМИЛИЯ_ПЕРСОНАЛ, string Original_ИМЯ_ПЕРСОНАЛ, string Original_ОТЧЕСТВО_ПЕРСОНАЛ, string Original_ЛОГИН, bool Original_РАБОТАЕТ, long Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, long Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ, long Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, float Original_РАЗРЯД_КОЭФФИЦИЕНТ, float Original_ОКЛАД, float Original_БОНУС_ДЕТАЛИ, float Original_БОНУС_МАСЛА) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_КОД_ПЕРСОНАЛ));
            if ((Original_ФАМИЛИЯ_ПЕРСОНАЛ == null)) {
                throw new global::System.ArgumentNullException("Original_ФАМИЛИЯ_ПЕРСОНАЛ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ФАМИЛИЯ_ПЕРСОНАЛ));
            }
            if ((Original_ИМЯ_ПЕРСОНАЛ == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ИМЯ_ПЕРСОНАЛ));
            }
            if ((Original_ОТЧЕСТВО_ПЕРСОНАЛ == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ОТЧЕСТВО_ПЕРСОНАЛ));
            }
            if ((Original_ЛОГИН == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ЛОГИН));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_РАБОТАЕТ));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((long)(Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((long)(Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((long)(Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((float)(Original_РАЗРЯД_КОЭФФИЦИЕНТ));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((float)(Original_ОКЛАД));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((float)(Original_БОНУС_ДЕТАЛИ));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((float)(Original_БОНУС_МАСЛА));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long КОД_ПЕРСОНАЛ, string ФАМИЛИЯ_ПЕРСОНАЛ, string ИМЯ_ПЕРСОНАЛ, string ОТЧЕСТВО_ПЕРСОНАЛ, string ЛОГИН, bool РАБОТАЕТ, long ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, long ССЫЛКА_КОД_ДОЛЖНОСТЬ, long ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, float РАЗРЯД_КОЭФФИЦИЕНТ, float ОКЛАД, float БОНУС_ДЕТАЛИ, float БОНУС_МАСЛА) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(КОД_ПЕРСОНАЛ));
            if ((ФАМИЛИЯ_ПЕРСОНАЛ == null)) {
                throw new global::System.ArgumentNullException("ФАМИЛИЯ_ПЕРСОНАЛ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ФАМИЛИЯ_ПЕРСОНАЛ));
            }
            if ((ИМЯ_ПЕРСОНАЛ == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ИМЯ_ПЕРСОНАЛ));
            }
            if ((ОТЧЕСТВО_ПЕРСОНАЛ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ОТЧЕСТВО_ПЕРСОНАЛ));
            }
            if ((ЛОГИН == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ЛОГИН));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(РАБОТАЕТ));
            this.Adapter.InsertCommand.Parameters[6].Value = ((long)(ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ));
            this.Adapter.InsertCommand.Parameters[7].Value = ((long)(ССЫЛКА_КОД_ДОЛЖНОСТЬ));
            this.Adapter.InsertCommand.Parameters[8].Value = ((long)(ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ));
            this.Adapter.InsertCommand.Parameters[9].Value = ((float)(РАЗРЯД_КОЭФФИЦИЕНТ));
            this.Adapter.InsertCommand.Parameters[10].Value = ((float)(ОКЛАД));
            this.Adapter.InsertCommand.Parameters[11].Value = ((float)(БОНУС_ДЕТАЛИ));
            this.Adapter.InsertCommand.Parameters[12].Value = ((float)(БОНУС_МАСЛА));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long КОД_ПЕРСОНАЛ, 
                    string ФАМИЛИЯ_ПЕРСОНАЛ, 
                    string ИМЯ_ПЕРСОНАЛ, 
                    string ОТЧЕСТВО_ПЕРСОНАЛ, 
                    string ЛОГИН, 
                    bool РАБОТАЕТ, 
                    long ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, 
                    long ССЫЛКА_КОД_ДОЛЖНОСТЬ, 
                    long ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, 
                    float РАЗРЯД_КОЭФФИЦИЕНТ, 
                    float ОКЛАД, 
                    float БОНУС_ДЕТАЛИ, 
                    float БОНУС_МАСЛА, 
                    long Original_КОД_ПЕРСОНАЛ, 
                    string Original_ФАМИЛИЯ_ПЕРСОНАЛ, 
                    string Original_ИМЯ_ПЕРСОНАЛ, 
                    string Original_ОТЧЕСТВО_ПЕРСОНАЛ, 
                    string Original_ЛОГИН, 
                    bool Original_РАБОТАЕТ, 
                    long Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, 
                    long Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ, 
                    long Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, 
                    float Original_РАЗРЯД_КОЭФФИЦИЕНТ, 
                    float Original_ОКЛАД, 
                    float Original_БОНУС_ДЕТАЛИ, 
                    float Original_БОНУС_МАСЛА) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(КОД_ПЕРСОНАЛ));
            if ((ФАМИЛИЯ_ПЕРСОНАЛ == null)) {
                throw new global::System.ArgumentNullException("ФАМИЛИЯ_ПЕРСОНАЛ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ФАМИЛИЯ_ПЕРСОНАЛ));
            }
            if ((ИМЯ_ПЕРСОНАЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ИМЯ_ПЕРСОНАЛ));
            }
            if ((ОТЧЕСТВО_ПЕРСОНАЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ОТЧЕСТВО_ПЕРСОНАЛ));
            }
            if ((ЛОГИН == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ЛОГИН));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(РАБОТАЕТ));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(ССЫЛКА_КОД_ДОЛЖНОСТЬ));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((float)(РАЗРЯД_КОЭФФИЦИЕНТ));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((float)(ОКЛАД));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((float)(БОНУС_ДЕТАЛИ));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((float)(БОНУС_МАСЛА));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(Original_КОД_ПЕРСОНАЛ));
            if ((Original_ФАМИЛИЯ_ПЕРСОНАЛ == null)) {
                throw new global::System.ArgumentNullException("Original_ФАМИЛИЯ_ПЕРСОНАЛ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ФАМИЛИЯ_ПЕРСОНАЛ));
            }
            if ((Original_ИМЯ_ПЕРСОНАЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ИМЯ_ПЕРСОНАЛ));
            }
            if ((Original_ОТЧЕСТВО_ПЕРСОНАЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_ОТЧЕСТВО_ПЕРСОНАЛ));
            }
            if ((Original_ЛОГИН == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ЛОГИН));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(Original_РАБОТАЕТ));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((long)(Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((long)(Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((float)(Original_РАЗРЯД_КОЭФФИЦИЕНТ));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((float)(Original_ОКЛАД));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((float)(Original_БОНУС_ДЕТАЛИ));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((float)(Original_БОНУС_МАСЛА));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ФАМИЛИЯ_ПЕРСОНАЛ, 
                    string ИМЯ_ПЕРСОНАЛ, 
                    string ОТЧЕСТВО_ПЕРСОНАЛ, 
                    string ЛОГИН, 
                    bool РАБОТАЕТ, 
                    long ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, 
                    long ССЫЛКА_КОД_ДОЛЖНОСТЬ, 
                    long ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, 
                    float РАЗРЯД_КОЭФФИЦИЕНТ, 
                    float ОКЛАД, 
                    float БОНУС_ДЕТАЛИ, 
                    float БОНУС_МАСЛА, 
                    long Original_КОД_ПЕРСОНАЛ, 
                    string Original_ФАМИЛИЯ_ПЕРСОНАЛ, 
                    string Original_ИМЯ_ПЕРСОНАЛ, 
                    string Original_ОТЧЕСТВО_ПЕРСОНАЛ, 
                    string Original_ЛОГИН, 
                    bool Original_РАБОТАЕТ, 
                    long Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, 
                    long Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ, 
                    long Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, 
                    float Original_РАЗРЯД_КОЭФФИЦИЕНТ, 
                    float Original_ОКЛАД, 
                    float Original_БОНУС_ДЕТАЛИ, 
                    float Original_БОНУС_МАСЛА) {
            return this.Update(Original_КОД_ПЕРСОНАЛ, ФАМИЛИЯ_ПЕРСОНАЛ, ИМЯ_ПЕРСОНАЛ, ОТЧЕСТВО_ПЕРСОНАЛ, ЛОГИН, РАБОТАЕТ, ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, ССЫЛКА_КОД_ДОЛЖНОСТЬ, ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, РАЗРЯД_КОЭФФИЦИЕНТ, ОКЛАД, БОНУС_ДЕТАЛИ, БОНУС_МАСЛА, Original_КОД_ПЕРСОНАЛ, Original_ФАМИЛИЯ_ПЕРСОНАЛ, Original_ИМЯ_ПЕРСОНАЛ, Original_ОТЧЕСТВО_ПЕРСОНАЛ, Original_ЛОГИН, Original_РАБОТАЕТ, Original_ЭЛЕКТРОННАЯ_ПОДПИСЬ_ПЕРСОНАЛ, Original_ССЫЛКА_КОД_ДОЛЖНОСТЬ, Original_ССЫЛКА_КОД_ПОДРАЗДЕЛЕНИЕ, Original_РАЗРЯД_КОЭФФИЦИЕНТ, Original_ОКЛАД, Original_БОНУС_ДЕТАЛИ, Original_БОНУС_МАСЛА);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ПЕРСОНАЛTableAdapter _пЕРСОНАЛTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПЕРСОНАЛTableAdapter ПЕРСОНАЛTableAdapter {
            get {
                return this._пЕРСОНАЛTableAdapter;
            }
            set {
                this._пЕРСОНАЛTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._пЕРСОНАЛTableAdapter != null) 
                            && (this._пЕРСОНАЛTableAdapter.Connection != null))) {
                    return this._пЕРСОНАЛTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._пЕРСОНАЛTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSetPersonal dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._пЕРСОНАЛTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПЕРСОНАЛ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пЕРСОНАЛTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSetPersonal dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._пЕРСОНАЛTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПЕРСОНАЛ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пЕРСОНАЛTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSetPersonal dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._пЕРСОНАЛTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПЕРСОНАЛ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пЕРСОНАЛTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSetPersonal dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._пЕРСОНАЛTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пЕРСОНАЛTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._пЕРСОНАЛTableAdapter != null)) {
                    revertConnections.Add(this._пЕРСОНАЛTableAdapter, this._пЕРСОНАЛTableAdapter.Connection);
                    this._пЕРСОНАЛTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._пЕРСОНАЛTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._пЕРСОНАЛTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пЕРСОНАЛTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пЕРСОНАЛTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._пЕРСОНАЛTableAdapter != null)) {
                    this._пЕРСОНАЛTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._пЕРСОНАЛTableAdapter]));
                    this._пЕРСОНАЛTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591